// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Tue Sep 10 00:12:50 2019
`timescale 1ns/1ps



module register_tb;

reg CLK_sig;
reg AS_RST_sig;
reg WE_sig;
reg S_RST_sig;
reg [31:0] D_sig;
wire [31:0] dout_sig;

register register_inst
(
	.D(D_sig) ,	// input [31:0] D_sig
	.AS_RST(AS_RST_sig) ,	// input  AS_RST_sig
	.S_RST(S_RST_sig) ,	// input  S_RST_sig
	.CLK(CLK_sig) ,	// input  CLK_sig
	.WE(WE_sig) ,	// input  WE_sig
	.dout(dout_sig) 	// output [31:0] dout_sig
);


initial begin
	CLK_sig = 1'b0;
	forever #2 CLK_sig = ~CLK_sig;
end


initial begin
	AS_RST_sig = 1'b1;
	S_RST_sig = 1'b1;
	WE_sig = 1'b1;

	#3 AS_RST_sig = ~AS_RST_sig;
	#2 AS_RST_sig = ~AS_RST_sig;

	#50 S_RST_sig = ~S_RST_sig;
	#10 S_RST_sig = ~S_RST_sig;

end

initial begin 
	D_sig = 32'h12345678;
	#20 D_sig = 32'habcdef00;
	#60 D_sig = 32'hdeadbeef;
end

initial begin
	#100 $stop();
end


endmodule
